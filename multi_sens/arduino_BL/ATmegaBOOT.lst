
ATmegaBOOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003dc  00001c00  00001c00  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00001fdc  00000470  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000108  00800062  00800062  00000472  2**0
                  ALLOC
  3 .stab         00001530  00000000  00000000  00000474  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ef8  00000000  00000000  000019a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000289c  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00001c00 <__vectors>:
    1c00:	12 c0       	rjmp	.+36     	; 0x1c26 <__ctors_end>
    1c02:	2c c0       	rjmp	.+88     	; 0x1c5c <__bad_interrupt>
    1c04:	2b c0       	rjmp	.+86     	; 0x1c5c <__bad_interrupt>
    1c06:	2a c0       	rjmp	.+84     	; 0x1c5c <__bad_interrupt>
    1c08:	29 c0       	rjmp	.+82     	; 0x1c5c <__bad_interrupt>
    1c0a:	28 c0       	rjmp	.+80     	; 0x1c5c <__bad_interrupt>
    1c0c:	27 c0       	rjmp	.+78     	; 0x1c5c <__bad_interrupt>
    1c0e:	26 c0       	rjmp	.+76     	; 0x1c5c <__bad_interrupt>
    1c10:	25 c0       	rjmp	.+74     	; 0x1c5c <__bad_interrupt>
    1c12:	24 c0       	rjmp	.+72     	; 0x1c5c <__bad_interrupt>
    1c14:	23 c0       	rjmp	.+70     	; 0x1c5c <__bad_interrupt>
    1c16:	22 c0       	rjmp	.+68     	; 0x1c5c <__bad_interrupt>
    1c18:	21 c0       	rjmp	.+66     	; 0x1c5c <__bad_interrupt>
    1c1a:	20 c0       	rjmp	.+64     	; 0x1c5c <__bad_interrupt>
    1c1c:	1f c0       	rjmp	.+62     	; 0x1c5c <__bad_interrupt>
    1c1e:	1e c0       	rjmp	.+60     	; 0x1c5c <__bad_interrupt>
    1c20:	1d c0       	rjmp	.+58     	; 0x1c5c <__bad_interrupt>
    1c22:	1c c0       	rjmp	.+56     	; 0x1c5c <__bad_interrupt>
    1c24:	1b c0       	rjmp	.+54     	; 0x1c5c <__bad_interrupt>

00001c26 <__ctors_end>:
    1c26:	11 24       	eor	r1, r1
    1c28:	1f be       	out	0x3f, r1	; 63
    1c2a:	cf e5       	ldi	r28, 0x5F	; 95
    1c2c:	d4 e0       	ldi	r29, 0x04	; 4
    1c2e:	de bf       	out	0x3e, r29	; 62
    1c30:	cd bf       	out	0x3d, r28	; 61

00001c32 <__do_copy_data>:
    1c32:	10 e0       	ldi	r17, 0x00	; 0
    1c34:	a0 e6       	ldi	r26, 0x60	; 96
    1c36:	b0 e0       	ldi	r27, 0x00	; 0
    1c38:	ec ed       	ldi	r30, 0xDC	; 220
    1c3a:	ff e1       	ldi	r31, 0x1F	; 31
    1c3c:	02 c0       	rjmp	.+4      	; 0x1c42 <__do_copy_data+0x10>
    1c3e:	05 90       	lpm	r0, Z+
    1c40:	0d 92       	st	X+, r0
    1c42:	a2 36       	cpi	r26, 0x62	; 98
    1c44:	b1 07       	cpc	r27, r17
    1c46:	d9 f7       	brne	.-10     	; 0x1c3e <__do_copy_data+0xc>

00001c48 <__do_clear_bss>:
    1c48:	11 e0       	ldi	r17, 0x01	; 1
    1c4a:	a2 e6       	ldi	r26, 0x62	; 98
    1c4c:	b0 e0       	ldi	r27, 0x00	; 0
    1c4e:	01 c0       	rjmp	.+2      	; 0x1c52 <.do_clear_bss_start>

00001c50 <.do_clear_bss_loop>:
    1c50:	1d 92       	st	X+, r1

00001c52 <.do_clear_bss_start>:
    1c52:	aa 36       	cpi	r26, 0x6A	; 106
    1c54:	b1 07       	cpc	r27, r17
    1c56:	e1 f7       	brne	.-8      	; 0x1c50 <.do_clear_bss_loop>
    1c58:	4a d0       	rcall	.+148    	; 0x1cee <main>
    1c5a:	be c1       	rjmp	.+892    	; 0x1fd8 <_exit>

00001c5c <__bad_interrupt>:
    1c5c:	d1 cf       	rjmp	.-94     	; 0x1c00 <__vectors>

00001c5e <putch>:
}

void putch(char ch)
{
  /* m8 */
  while (!(inb(UCSRA) & _BV(UDRE)));
    1c5e:	5d 9b       	sbis	0x0b, 5	; 11
    1c60:	fe cf       	rjmp	.-4      	; 0x1c5e <putch>
  outb(UDR,ch);
    1c62:	8c b9       	out	0x0c, r24	; 12
    1c64:	08 95       	ret

00001c66 <getch>:
}

char getch(void)
{
    1c66:	cf 92       	push	r12
    1c68:	df 92       	push	r13
    1c6a:	ef 92       	push	r14
    1c6c:	ff 92       	push	r15
  /* m8 */
	uint32_t count = 0;
    1c6e:	c1 2c       	mov	r12, r1
    1c70:	d1 2c       	mov	r13, r1
    1c72:	76 01       	movw	r14, r12
  while(!(inb(UCSRA) & _BV(RXC))) {
    1c74:	5f 99       	sbic	0x0b, 7	; 11
    1c76:	13 c0       	rjmp	.+38     	; 0x1c9e <getch+0x38>
		/* HACKME:: here is a good place to count times*/
		count++;
    1c78:	8f ef       	ldi	r24, 0xFF	; 255
    1c7a:	c8 1a       	sub	r12, r24
    1c7c:	d8 0a       	sbc	r13, r24
    1c7e:	e8 0a       	sbc	r14, r24
    1c80:	f8 0a       	sbc	r15, r24
		if (count > MAX_TIME_COUNT)
    1c82:	81 e8       	ldi	r24, 0x81	; 129
    1c84:	c8 16       	cp	r12, r24
    1c86:	8d e8       	ldi	r24, 0x8D	; 141
    1c88:	d8 06       	cpc	r13, r24
    1c8a:	8b e5       	ldi	r24, 0x5B	; 91
    1c8c:	e8 06       	cpc	r14, r24
    1c8e:	f1 04       	cpc	r15, r1
    1c90:	88 f3       	brcs	.-30     	; 0x1c74 <getch+0xe>
			app_start();
    1c92:	e0 91 62 00 	lds	r30, 0x0062
    1c96:	f0 91 63 00 	lds	r31, 0x0063
    1c9a:	09 95       	icall
    1c9c:	eb cf       	rjmp	.-42     	; 0x1c74 <getch+0xe>
  }
  return (inb(UDR));
    1c9e:	8c b1       	in	r24, 0x0c	; 12
}
    1ca0:	ff 90       	pop	r15
    1ca2:	ef 90       	pop	r14
    1ca4:	df 90       	pop	r13
    1ca6:	cf 90       	pop	r12
    1ca8:	08 95       	ret

00001caa <getNch>:

void getNch(uint8_t count)
{
    1caa:	cf 93       	push	r28
    1cac:	df 93       	push	r29
    1cae:	d8 2f       	mov	r29, r24
  uint8_t i;
  for(i=0;i<count;i++) {
    1cb0:	c0 e0       	ldi	r28, 0x00	; 0
    1cb2:	cd 17       	cp	r28, r29
    1cb4:	19 f0       	breq	.+6      	; 0x1cbc <getNch+0x12>
    /* m8 */
    //while(!(inb(UCSRA) & _BV(RXC)));
    //inb(UDR);
		getch(); // need to handle time out
    1cb6:	d7 df       	rcall	.-82     	; 0x1c66 <getch>
}

void getNch(uint8_t count)
{
  uint8_t i;
  for(i=0;i<count;i++) {
    1cb8:	cf 5f       	subi	r28, 0xFF	; 255
    1cba:	fb cf       	rjmp	.-10     	; 0x1cb2 <getNch+0x8>
    /* m8 */
    //while(!(inb(UCSRA) & _BV(RXC)));
    //inb(UDR);
		getch(); // need to handle time out
  }
}
    1cbc:	df 91       	pop	r29
    1cbe:	cf 91       	pop	r28
    1cc0:	08 95       	ret

00001cc2 <byte_response>:

void byte_response(uint8_t val)
{
    1cc2:	cf 93       	push	r28
    1cc4:	c8 2f       	mov	r28, r24
  if (getch() == ' ') {
    1cc6:	cf df       	rcall	.-98     	; 0x1c66 <getch>
    1cc8:	80 32       	cpi	r24, 0x20	; 32
    1cca:	39 f4       	brne	.+14     	; 0x1cda <byte_response+0x18>
    putch(0x14);
    1ccc:	84 e1       	ldi	r24, 0x14	; 20
    1cce:	c7 df       	rcall	.-114    	; 0x1c5e <putch>
    putch(val);
    1cd0:	8c 2f       	mov	r24, r28
    1cd2:	c5 df       	rcall	.-118    	; 0x1c5e <putch>
    putch(0x10);
    1cd4:	80 e1       	ldi	r24, 0x10	; 16
  }
}
    1cd6:	cf 91       	pop	r28
void byte_response(uint8_t val)
{
  if (getch() == ' ') {
    putch(0x14);
    putch(val);
    putch(0x10);
    1cd8:	c2 cf       	rjmp	.-124    	; 0x1c5e <putch>
  }
}
    1cda:	cf 91       	pop	r28
    1cdc:	08 95       	ret

00001cde <nothing_response>:

void nothing_response(void)
{
  if (getch() == ' ') {
    1cde:	c3 df       	rcall	.-122    	; 0x1c66 <getch>
    1ce0:	80 32       	cpi	r24, 0x20	; 32
    1ce2:	21 f4       	brne	.+8      	; 0x1cec <nothing_response+0xe>
    putch(0x14);
    1ce4:	84 e1       	ldi	r24, 0x14	; 20
    1ce6:	bb df       	rcall	.-138    	; 0x1c5e <putch>
    putch(0x10);
    1ce8:	80 e1       	ldi	r24, 0x10	; 16
    1cea:	b9 cf       	rjmp	.-142    	; 0x1c5e <putch>
    1cec:	08 95       	ret

00001cee <main>:
    1cee:	00 00       	nop
    1cf0:	10 bc       	out	0x20, r1	; 32
    1cf2:	83 e3       	ldi	r24, 0x33	; 51
    1cf4:	89 b9       	out	0x09, r24	; 9
    1cf6:	88 e1       	ldi	r24, 0x18	; 24
    1cf8:	8a b9       	out	0x0a, r24	; 10
    1cfa:	86 e8       	ldi	r24, 0x86	; 134
    1cfc:	80 bd       	out	0x20, r24	; 32
    1cfe:	a0 9a       	sbi	0x14, 0	; 20
    1d00:	10 92 68 01 	sts	0x0168, r1
    1d04:	21 e0       	ldi	r18, 0x01	; 1
    1d06:	40 e0       	ldi	r20, 0x00	; 0
    1d08:	50 e0       	ldi	r21, 0x00	; 0
    1d0a:	80 91 68 01 	lds	r24, 0x0168
    1d0e:	80 31       	cpi	r24, 0x10	; 16
    1d10:	b8 f4       	brcc	.+46     	; 0x1d40 <main+0x52>
    1d12:	85 b3       	in	r24, 0x15	; 21
    1d14:	82 27       	eor	r24, r18
    1d16:	85 bb       	out	0x15, r24	; 21
    1d18:	ca 01       	movw	r24, r20
    1d1a:	01 97       	sbiw	r24, 0x01	; 1
    1d1c:	f1 f7       	brne	.-4      	; 0x1d1a <main+0x2c>
    1d1e:	80 91 68 01 	lds	r24, 0x0168
    1d22:	8f 5f       	subi	r24, 0xFF	; 255
    1d24:	80 93 68 01 	sts	0x0168, r24
    1d28:	f0 cf       	rjmp	.-32     	; 0x1d0a <main+0x1c>
    1d2a:	81 33       	cpi	r24, 0x31	; 49
    1d2c:	69 f0       	breq	.+26     	; 0x1d48 <main+0x5a>
    1d2e:	80 34       	cpi	r24, 0x40	; 64
    1d30:	f1 f0       	breq	.+60     	; 0x1d6e <main+0x80>
    1d32:	81 34       	cpi	r24, 0x41	; 65
    1d34:	49 f5       	brne	.+82     	; 0x1d88 <main+0x9a>
    1d36:	97 df       	rcall	.-210    	; 0x1c66 <getch>
    1d38:	80 38       	cpi	r24, 0x80	; 128
    1d3a:	f1 f4       	brne	.+60     	; 0x1d78 <main+0x8a>
    1d3c:	82 e0       	ldi	r24, 0x02	; 2
    1d3e:	c1 df       	rcall	.-126    	; 0x1cc2 <byte_response>
    1d40:	92 df       	rcall	.-220    	; 0x1c66 <getch>
    1d42:	80 33       	cpi	r24, 0x30	; 48
    1d44:	91 f7       	brne	.-28     	; 0x1d2a <main+0x3c>
    1d46:	24 c0       	rjmp	.+72     	; 0x1d90 <main+0xa2>
    1d48:	8e df       	rcall	.-228    	; 0x1c66 <getch>
    1d4a:	80 32       	cpi	r24, 0x20	; 32
    1d4c:	c9 f7       	brne	.-14     	; 0x1d40 <main+0x52>
    1d4e:	84 e1       	ldi	r24, 0x14	; 20
    1d50:	86 df       	rcall	.-244    	; 0x1c5e <putch>
    1d52:	81 e4       	ldi	r24, 0x41	; 65
    1d54:	84 df       	rcall	.-248    	; 0x1c5e <putch>
    1d56:	86 e5       	ldi	r24, 0x56	; 86
    1d58:	82 df       	rcall	.-252    	; 0x1c5e <putch>
    1d5a:	82 e5       	ldi	r24, 0x52	; 82
    1d5c:	80 df       	rcall	.-256    	; 0x1c5e <putch>
    1d5e:	80 e2       	ldi	r24, 0x20	; 32
    1d60:	7e df       	rcall	.-260    	; 0x1c5e <putch>
    1d62:	89 e4       	ldi	r24, 0x49	; 73
    1d64:	7c df       	rcall	.-264    	; 0x1c5e <putch>
    1d66:	83 e5       	ldi	r24, 0x53	; 83
    1d68:	7a df       	rcall	.-268    	; 0x1c5e <putch>
    1d6a:	80 e5       	ldi	r24, 0x50	; 80
    1d6c:	18 c1       	rjmp	.+560    	; 0x1f9e <block_done+0xbc>
    1d6e:	7b df       	rcall	.-266    	; 0x1c66 <getch>
    1d70:	86 38       	cpi	r24, 0x86	; 134
    1d72:	70 f0       	brcs	.+28     	; 0x1d90 <main+0xa2>
    1d74:	78 df       	rcall	.-272    	; 0x1c66 <getch>
    1d76:	0c c0       	rjmp	.+24     	; 0x1d90 <main+0xa2>
    1d78:	81 38       	cpi	r24, 0x81	; 129
    1d7a:	11 f4       	brne	.+4      	; 0x1d80 <main+0x92>
    1d7c:	81 e0       	ldi	r24, 0x01	; 1
    1d7e:	df cf       	rjmp	.-66     	; 0x1d3e <main+0x50>
    1d80:	82 38       	cpi	r24, 0x82	; 130
    1d82:	e9 f4       	brne	.+58     	; 0x1dbe <main+0xd0>
    1d84:	82 e1       	ldi	r24, 0x12	; 18
    1d86:	db cf       	rjmp	.-74     	; 0x1d3e <main+0x50>
    1d88:	82 34       	cpi	r24, 0x42	; 66
    1d8a:	21 f4       	brne	.+8      	; 0x1d94 <main+0xa6>
    1d8c:	84 e1       	ldi	r24, 0x14	; 20
    1d8e:	8d df       	rcall	.-230    	; 0x1caa <getNch>
    1d90:	a6 df       	rcall	.-180    	; 0x1cde <nothing_response>
    1d92:	d6 cf       	rjmp	.-84     	; 0x1d40 <main+0x52>
    1d94:	85 34       	cpi	r24, 0x45	; 69
    1d96:	11 f4       	brne	.+4      	; 0x1d9c <main+0xae>
    1d98:	85 e0       	ldi	r24, 0x05	; 5
    1d9a:	f9 cf       	rjmp	.-14     	; 0x1d8e <main+0xa0>
    1d9c:	90 eb       	ldi	r25, 0xB0	; 176
    1d9e:	98 0f       	add	r25, r24
    1da0:	93 30       	cpi	r25, 0x03	; 3
    1da2:	b0 f3       	brcs	.-20     	; 0x1d90 <main+0xa2>
    1da4:	85 35       	cpi	r24, 0x55	; 85
    1da6:	39 f4       	brne	.+14     	; 0x1db6 <main+0xc8>
    1da8:	5e df       	rcall	.-324    	; 0x1c66 <getch>
    1daa:	80 93 64 00 	sts	0x0064, r24
    1dae:	5b df       	rcall	.-330    	; 0x1c66 <getch>
    1db0:	80 93 65 00 	sts	0x0065, r24
    1db4:	ed cf       	rjmp	.-38     	; 0x1d90 <main+0xa2>
    1db6:	86 35       	cpi	r24, 0x56	; 86
    1db8:	21 f4       	brne	.+8      	; 0x1dc2 <main+0xd4>
    1dba:	84 e0       	ldi	r24, 0x04	; 4
    1dbc:	76 df       	rcall	.-276    	; 0x1caa <getNch>
    1dbe:	80 e0       	ldi	r24, 0x00	; 0
    1dc0:	be cf       	rjmp	.-132    	; 0x1d3e <main+0x50>
    1dc2:	84 36       	cpi	r24, 0x64	; 100
    1dc4:	09 f0       	breq	.+2      	; 0x1dc8 <main+0xda>
    1dc6:	90 c0       	rjmp	.+288    	; 0x1ee8 <block_done+0x6>
    1dc8:	4e df       	rcall	.-356    	; 0x1c66 <getch>
    1dca:	80 93 67 01 	sts	0x0167, r24
    1dce:	4b df       	rcall	.-362    	; 0x1c66 <getch>
    1dd0:	80 93 66 01 	sts	0x0166, r24
    1dd4:	80 91 69 01 	lds	r24, 0x0169
    1dd8:	8e 7f       	andi	r24, 0xFE	; 254
    1dda:	80 93 69 01 	sts	0x0169, r24
    1dde:	43 df       	rcall	.-378    	; 0x1c66 <getch>
    1de0:	85 34       	cpi	r24, 0x45	; 69
    1de2:	29 f4       	brne	.+10     	; 0x1dee <main+0x100>
    1de4:	80 91 69 01 	lds	r24, 0x0169
    1de8:	81 60       	ori	r24, 0x01	; 1
    1dea:	80 93 69 01 	sts	0x0169, r24
    1dee:	06 e6       	ldi	r16, 0x66	; 102
    1df0:	10 e0       	ldi	r17, 0x00	; 0
    1df2:	20 91 66 01 	lds	r18, 0x0166
    1df6:	30 91 67 01 	lds	r19, 0x0167
    1dfa:	c8 01       	movw	r24, r16
    1dfc:	86 56       	subi	r24, 0x66	; 102
    1dfe:	90 40       	sbci	r25, 0x00	; 0
    1e00:	82 17       	cp	r24, r18
    1e02:	93 07       	cpc	r25, r19
    1e04:	28 f4       	brcc	.+10     	; 0x1e10 <main+0x122>
    1e06:	2f df       	rcall	.-418    	; 0x1c66 <getch>
    1e08:	f8 01       	movw	r30, r16
    1e0a:	81 93       	st	Z+, r24
    1e0c:	8f 01       	movw	r16, r30
    1e0e:	f1 cf       	rjmp	.-30     	; 0x1df2 <main+0x104>
    1e10:	2a df       	rcall	.-428    	; 0x1c66 <getch>
    1e12:	80 32       	cpi	r24, 0x20	; 32
    1e14:	09 f0       	breq	.+2      	; 0x1e18 <main+0x12a>
    1e16:	94 cf       	rjmp	.-216    	; 0x1d40 <main+0x52>
    1e18:	80 91 69 01 	lds	r24, 0x0169
    1e1c:	80 ff       	sbrs	r24, 0
    1e1e:	1f c0       	rjmp	.+62     	; 0x1e5e <main+0x170>
    1e20:	06 e6       	ldi	r16, 0x66	; 102
    1e22:	10 e0       	ldi	r17, 0x00	; 0
    1e24:	20 91 66 01 	lds	r18, 0x0166
    1e28:	30 91 67 01 	lds	r19, 0x0167
    1e2c:	c8 01       	movw	r24, r16
    1e2e:	86 56       	subi	r24, 0x66	; 102
    1e30:	90 40       	sbci	r25, 0x00	; 0
    1e32:	82 17       	cp	r24, r18
    1e34:	93 07       	cpc	r25, r19
    1e36:	08 f0       	brcs	.+2      	; 0x1e3a <main+0x14c>
    1e38:	55 c0       	rjmp	.+170    	; 0x1ee4 <block_done+0x2>
    1e3a:	f8 01       	movw	r30, r16
    1e3c:	61 91       	ld	r22, Z+
    1e3e:	8f 01       	movw	r16, r30
    1e40:	80 91 64 00 	lds	r24, 0x0064
    1e44:	90 91 65 00 	lds	r25, 0x0065
    1e48:	ba d0       	rcall	.+372    	; 0x1fbe <__eewr_byte_m8>
    1e4a:	80 91 64 00 	lds	r24, 0x0064
    1e4e:	90 91 65 00 	lds	r25, 0x0065
    1e52:	01 96       	adiw	r24, 0x01	; 1
    1e54:	90 93 65 00 	sts	0x0065, r25
    1e58:	80 93 64 00 	sts	0x0064, r24
    1e5c:	e3 cf       	rjmp	.-58     	; 0x1e24 <main+0x136>
    1e5e:	f8 94       	cli
    1e60:	e1 99       	sbic	0x1c, 1	; 28
    1e62:	fe cf       	rjmp	.-4      	; 0x1e60 <main+0x172>
    1e64:	11 27       	eor	r17, r17
    1e66:	e0 91 64 00 	lds	r30, 0x0064
    1e6a:	f0 91 65 00 	lds	r31, 0x0065
    1e6e:	ee 0f       	add	r30, r30
    1e70:	ff 1f       	adc	r31, r31
    1e72:	c6 e6       	ldi	r28, 0x66	; 102
    1e74:	d0 e0       	ldi	r29, 0x00	; 0
    1e76:	80 91 66 01 	lds	r24, 0x0166
    1e7a:	90 91 67 01 	lds	r25, 0x0167
    1e7e:	80 ff       	sbrs	r24, 0
    1e80:	01 c0       	rjmp	.+2      	; 0x1e84 <length_loop>
    1e82:	01 96       	adiw	r24, 0x01	; 1

00001e84 <length_loop>:
    1e84:	10 30       	cpi	r17, 0x00	; 0
    1e86:	51 f4       	brne	.+20     	; 0x1e9c <no_page_erase>
    1e88:	22 d0       	rcall	.+68     	; 0x1ece <wait_spm>
    1e8a:	03 e0       	ldi	r16, 0x03	; 3
    1e8c:	00 93 57 00 	sts	0x0057, r16
    1e90:	e8 95       	spm
    1e92:	1d d0       	rcall	.+58     	; 0x1ece <wait_spm>
    1e94:	01 e1       	ldi	r16, 0x11	; 17
    1e96:	00 93 57 00 	sts	0x0057, r16
    1e9a:	e8 95       	spm

00001e9c <no_page_erase>:
    1e9c:	09 90       	ld	r0, Y+
    1e9e:	19 90       	ld	r1, Y+
    1ea0:	16 d0       	rcall	.+44     	; 0x1ece <wait_spm>
    1ea2:	01 e0       	ldi	r16, 0x01	; 1
    1ea4:	00 93 57 00 	sts	0x0057, r16
    1ea8:	e8 95       	spm
    1eaa:	13 95       	inc	r17
    1eac:	10 32       	cpi	r17, 0x20	; 32
    1eae:	58 f0       	brcs	.+22     	; 0x1ec6 <same_page>

00001eb0 <write_page>:
    1eb0:	11 27       	eor	r17, r17
    1eb2:	0d d0       	rcall	.+26     	; 0x1ece <wait_spm>
    1eb4:	05 e0       	ldi	r16, 0x05	; 5
    1eb6:	00 93 57 00 	sts	0x0057, r16
    1eba:	e8 95       	spm
    1ebc:	08 d0       	rcall	.+16     	; 0x1ece <wait_spm>
    1ebe:	01 e1       	ldi	r16, 0x11	; 17
    1ec0:	00 93 57 00 	sts	0x0057, r16
    1ec4:	e8 95       	spm

00001ec6 <same_page>:
    1ec6:	32 96       	adiw	r30, 0x02	; 2
    1ec8:	02 97       	sbiw	r24, 0x02	; 2
    1eca:	39 f0       	breq	.+14     	; 0x1eda <final_write>
    1ecc:	db cf       	rjmp	.-74     	; 0x1e84 <length_loop>

00001ece <wait_spm>:
    1ece:	00 91 57 00 	lds	r16, 0x0057
    1ed2:	01 70       	andi	r16, 0x01	; 1
    1ed4:	01 30       	cpi	r16, 0x01	; 1
    1ed6:	d9 f3       	breq	.-10     	; 0x1ece <wait_spm>
    1ed8:	08 95       	ret

00001eda <final_write>:
    1eda:	10 30       	cpi	r17, 0x00	; 0
    1edc:	11 f0       	breq	.+4      	; 0x1ee2 <block_done>
    1ede:	02 96       	adiw	r24, 0x02	; 2
    1ee0:	e7 cf       	rjmp	.-50     	; 0x1eb0 <write_page>

00001ee2 <block_done>:
    1ee2:	11 24       	eor	r1, r1
    1ee4:	84 e1       	ldi	r24, 0x14	; 20
    1ee6:	5b c0       	rjmp	.+182    	; 0x1f9e <block_done+0xbc>
    1ee8:	84 37       	cpi	r24, 0x74	; 116
    1eea:	09 f0       	breq	.+2      	; 0x1eee <block_done+0xc>
    1eec:	4b c0       	rjmp	.+150    	; 0x1f84 <block_done+0xa2>
    1eee:	bb de       	rcall	.-650    	; 0x1c66 <getch>
    1ef0:	80 93 67 01 	sts	0x0167, r24
    1ef4:	b8 de       	rcall	.-656    	; 0x1c66 <getch>
    1ef6:	80 93 66 01 	sts	0x0166, r24
    1efa:	b5 de       	rcall	.-662    	; 0x1c66 <getch>
    1efc:	85 34       	cpi	r24, 0x45	; 69
    1efe:	31 f4       	brne	.+12     	; 0x1f0c <block_done+0x2a>
    1f00:	80 91 69 01 	lds	r24, 0x0169
    1f04:	81 60       	ori	r24, 0x01	; 1
    1f06:	80 93 69 01 	sts	0x0169, r24
    1f0a:	0f c0       	rjmp	.+30     	; 0x1f2a <block_done+0x48>
    1f0c:	80 91 69 01 	lds	r24, 0x0169
    1f10:	8e 7f       	andi	r24, 0xFE	; 254
    1f12:	80 93 69 01 	sts	0x0169, r24
    1f16:	80 91 64 00 	lds	r24, 0x0064
    1f1a:	90 91 65 00 	lds	r25, 0x0065
    1f1e:	88 0f       	add	r24, r24
    1f20:	99 1f       	adc	r25, r25
    1f22:	90 93 65 00 	sts	0x0065, r25
    1f26:	80 93 64 00 	sts	0x0064, r24
    1f2a:	9d de       	rcall	.-710    	; 0x1c66 <getch>
    1f2c:	80 32       	cpi	r24, 0x20	; 32
    1f2e:	09 f0       	breq	.+2      	; 0x1f32 <block_done+0x50>
    1f30:	07 cf       	rjmp	.-498    	; 0x1d40 <main+0x52>
    1f32:	84 e1       	ldi	r24, 0x14	; 20
    1f34:	94 de       	rcall	.-728    	; 0x1c5e <putch>
    1f36:	00 e0       	ldi	r16, 0x00	; 0
    1f38:	10 e0       	ldi	r17, 0x00	; 0
    1f3a:	80 91 66 01 	lds	r24, 0x0166
    1f3e:	90 91 67 01 	lds	r25, 0x0167
    1f42:	08 17       	cp	r16, r24
    1f44:	19 07       	cpc	r17, r25
    1f46:	60 f5       	brcc	.+88     	; 0x1fa0 <block_done+0xbe>
    1f48:	80 91 69 01 	lds	r24, 0x0169
    1f4c:	80 ff       	sbrs	r24, 0
    1f4e:	06 c0       	rjmp	.+12     	; 0x1f5c <block_done+0x7a>
    1f50:	80 91 64 00 	lds	r24, 0x0064
    1f54:	90 91 65 00 	lds	r25, 0x0065
    1f58:	2a d0       	rcall	.+84     	; 0x1fae <__eerd_byte_m8>
    1f5a:	07 c0       	rjmp	.+14     	; 0x1f6a <block_done+0x88>
    1f5c:	81 fd       	sbrc	r24, 1
    1f5e:	06 c0       	rjmp	.+12     	; 0x1f6c <block_done+0x8a>
    1f60:	e0 91 64 00 	lds	r30, 0x0064
    1f64:	f0 91 65 00 	lds	r31, 0x0065
    1f68:	84 91       	lpm	r24, Z
    1f6a:	79 de       	rcall	.-782    	; 0x1c5e <putch>
    1f6c:	80 91 64 00 	lds	r24, 0x0064
    1f70:	90 91 65 00 	lds	r25, 0x0065
    1f74:	01 96       	adiw	r24, 0x01	; 1
    1f76:	90 93 65 00 	sts	0x0065, r25
    1f7a:	80 93 64 00 	sts	0x0064, r24
    1f7e:	0f 5f       	subi	r16, 0xFF	; 255
    1f80:	1f 4f       	sbci	r17, 0xFF	; 255
    1f82:	db cf       	rjmp	.-74     	; 0x1f3a <block_done+0x58>
    1f84:	85 37       	cpi	r24, 0x75	; 117
    1f86:	79 f4       	brne	.+30     	; 0x1fa6 <block_done+0xc4>
    1f88:	6e de       	rcall	.-804    	; 0x1c66 <getch>
    1f8a:	80 32       	cpi	r24, 0x20	; 32
    1f8c:	09 f0       	breq	.+2      	; 0x1f90 <block_done+0xae>
    1f8e:	d8 ce       	rjmp	.-592    	; 0x1d40 <main+0x52>
    1f90:	84 e1       	ldi	r24, 0x14	; 20
    1f92:	65 de       	rcall	.-822    	; 0x1c5e <putch>
    1f94:	8e e1       	ldi	r24, 0x1E	; 30
    1f96:	63 de       	rcall	.-826    	; 0x1c5e <putch>
    1f98:	83 e9       	ldi	r24, 0x93	; 147
    1f9a:	61 de       	rcall	.-830    	; 0x1c5e <putch>
    1f9c:	87 e0       	ldi	r24, 0x07	; 7
    1f9e:	5f de       	rcall	.-834    	; 0x1c5e <putch>
    1fa0:	80 e1       	ldi	r24, 0x10	; 16
    1fa2:	5d de       	rcall	.-838    	; 0x1c5e <putch>
    1fa4:	cd ce       	rjmp	.-614    	; 0x1d40 <main+0x52>
    1fa6:	86 37       	cpi	r24, 0x76	; 118
    1fa8:	09 f0       	breq	.+2      	; 0x1fac <block_done+0xca>
    1faa:	ca ce       	rjmp	.-620    	; 0x1d40 <main+0x52>
    1fac:	08 cf       	rjmp	.-496    	; 0x1dbe <main+0xd0>

00001fae <__eerd_byte_m8>:
    1fae:	e1 99       	sbic	0x1c, 1	; 28
    1fb0:	fe cf       	rjmp	.-4      	; 0x1fae <__eerd_byte_m8>
    1fb2:	9f bb       	out	0x1f, r25	; 31
    1fb4:	8e bb       	out	0x1e, r24	; 30
    1fb6:	e0 9a       	sbi	0x1c, 0	; 28
    1fb8:	99 27       	eor	r25, r25
    1fba:	8d b3       	in	r24, 0x1d	; 29
    1fbc:	08 95       	ret

00001fbe <__eewr_byte_m8>:
    1fbe:	26 2f       	mov	r18, r22

00001fc0 <__eewr_r18_m8>:
    1fc0:	e1 99       	sbic	0x1c, 1	; 28
    1fc2:	fe cf       	rjmp	.-4      	; 0x1fc0 <__eewr_r18_m8>
    1fc4:	9f bb       	out	0x1f, r25	; 31
    1fc6:	8e bb       	out	0x1e, r24	; 30
    1fc8:	2d bb       	out	0x1d, r18	; 29
    1fca:	0f b6       	in	r0, 0x3f	; 63
    1fcc:	f8 94       	cli
    1fce:	e2 9a       	sbi	0x1c, 2	; 28
    1fd0:	e1 9a       	sbi	0x1c, 1	; 28
    1fd2:	0f be       	out	0x3f, r0	; 63
    1fd4:	01 96       	adiw	r24, 0x01	; 1
    1fd6:	08 95       	ret

00001fd8 <_exit>:
    1fd8:	f8 94       	cli

00001fda <__stop_program>:
    1fda:	ff cf       	rjmp	.-2      	; 0x1fda <__stop_program>
